# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-11-04 15:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0011_auto_20161020_1033'),
        ('conference', '0002_auto_20161103_1222'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='conference',
            name='end_time',
        ),
        migrations.RemoveField(
            model_name='conference',
            name='start_time',
        ),
        migrations.AddField(
            model_name='conference',
            name='about_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.CustomImage', verbose_name=b'About Image'),
        ),
        migrations.AddField(
            model_name='conference',
            name='location_name',
            field=models.TextField(blank=True, help_text=b'Name of building (e.g. the Kennedy Center)', null=True),
        ),
        migrations.AlterField(
            model_name='conference',
            name='partners',
            field=wagtail.wagtailcore.fields.StreamField([(b'partner', wagtail.wagtailcore.blocks.StructBlock([(b'name', wagtail.wagtailcore.blocks.TextBlock()), (b'type', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[(b'premier_sponsor', b'Premier Sponsor'), (b'sponsor', b'Sponsor'), (b'media_partner', b'Media Partner'), (b'recognized_partner', b'Recognized Partner')])), (b'logo', wagtail.wagtailimages.blocks.ImageChooserBlock(icon=b'image'))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='conference',
            name='sessions',
            field=wagtail.wagtailcore.fields.StreamField([(b'days', wagtail.wagtailcore.blocks.StructBlock([(b'day', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6')], help_text=b'What day of the conference is this session on?')), (b'start_time', wagtail.wagtailcore.blocks.TimeBlock()), (b'end_time', wagtail.wagtailcore.blocks.TimeBlock()), (b'sessions', wagtail.wagtailcore.blocks.StreamBlock([(b'session', wagtail.wagtailcore.blocks.StructBlock([(b'name', wagtail.wagtailcore.blocks.TextBlock()), (b'session_type', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[(b'panel', b'Panel'), (b'lecture', b'Lecture'), (b'break', b'Break'), (b'meal', b'Meal'), (b'reception', b'Reception'), (b'registration', b'Registration')])), (b'description', wagtail.wagtailcore.blocks.RichTextBlock()), (b'start_time', wagtail.wagtailcore.blocks.TimeBlock()), (b'end_time', wagtail.wagtailcore.blocks.TimeBlock(required=False)), (b'speakers', wagtail.wagtailcore.blocks.StreamBlock([(b'speaker', wagtail.wagtailcore.blocks.StructBlock([(b'name', wagtail.wagtailcore.blocks.TextBlock(required=True)), (b'title', wagtail.wagtailcore.blocks.TextBlock())]))])), (b'archived_video_link', wagtail.wagtailcore.blocks.URLBlock(help_text=b'Enter youtube link after conference'))]))]))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='conference',
            name='speakers',
            field=wagtail.wagtailcore.fields.StreamField([(b'person', wagtail.wagtailcore.blocks.StructBlock([(b'name', wagtail.wagtailcore.blocks.TextBlock(required=True)), (b'title', wagtail.wagtailcore.blocks.TextBlock()), (b'description', wagtail.wagtailcore.blocks.RichTextBlock()), (b'image', wagtail.wagtailimages.blocks.ImageChooserBlock(icon=b'image')), (b'twitter', wagtail.wagtailcore.blocks.URLBlock(required=False))]))], blank=True, null=True),
        ),
    ]
